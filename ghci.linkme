:m - Prelude
:m + GOA

:set prompt "Î»: "
:m + Control.Monad Control.Applicative Control.Monad.Error Control.Monad.State Control.Monad.Reader Control.Monad.Writer Control.Lens
let ghciEscapeShellArg arg = "'" ++ concatMap (\c -> if c == '\'' then "'\"'\"'" else [c]) arg ++ "'"
:def! search return . (":! hoogle --count=15 " ++) . ghciEscapeShellArg
:def! doc return . (":! hoogle --info " ++) . ghciEscapeShellArg
:def! searchc return . (":! hoogle --color --count=15 " ++) . ghciEscapeShellArg
:def! docc return . (":! hoogle --color --info " ++) . ghciEscapeShellArg
:set +t
:seti -XNoMonomorphismRestriction
:seti -XDataKinds
:seti -XPolyKinds
:seti -XGADTs
:seti -XRankNTypes
:seti -XTypeOperators
