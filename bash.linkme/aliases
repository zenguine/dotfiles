#!/bin/sh

alias ....='cd ../../..'
alias ...='cd ../..'
alias ..='cd ..'
alias p='pushd'
alias o='popd'
alias E='emacs -nw `ls -t | head -1`'
alias V='vim `ls -t | head -1`'
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
alias ec='ALTERNATE_EDITOR="emacs -nw" emacsclient -t'
alias e='ALTERNATE_EDITOR="emacs" emacsclient -c'
# alias g='gvim --remote-silent'
alias gv='gvim'
alias hnb-partecs='hnb $HOME/partecs/partecs-hnb.xml'
alias ls='ls -h --color=auto '
alias l='ls -CF'
alias la='ls -A'
alias ll='ls -al'
alias man='LC_ALL=C LANG=C man'
alias x='exit'
alias open= 'xdg-open'
alias locate='locate -i --regexp'
alias lock='xscreensaver-command --lock'
alias bp='echo -e "\a"'

# FASD aliases
alias v='f -e vim'

# Function either sends the argument files to be editted in the active vim server, or creates the vim server first if it doesn't already exist
# Further, if we are in a tmux session, each tmux session gets its own vim server depending on the session name
vs () {
    if [[ "$TERM" == "screen-256color" ]]; then # if we're in a tmux session
        SERVERNAME="tmux-`tmux list-panes -F '#{session_name}' | head -1`-vim" # give session its own vim server
    else
        SERVERNAME='default' # else, default
    fi

    if [ -z "$1" ]
    then
        (vim --serverlist | grep -i "$SERVERNAME" && echo "Already have a server active, if you want a new one do it manually") || vim --servername "$SERVERNAME"
    else
        vim --servername "$SERVERNAME" --remote-silent "$@" 2> /dev/null || vim --servername "$SERVERNAME" "$@"
    fi
}

# TMUX ---------------

alias tl='tmux list-sessions'

# If the first argument is the name of a currently running tmux session -> attach to it
# otherwise, create a session with the specified name
ts () {
    if [ -z "$1" ]
    then
        echo 'No tmux session name specified. Defaulting to session name: main'
        TMUXSESSION="main"
    else
        TMUXSESSION=$1
    fi
    # if the session is already running, just attach to it.
    tmux has-session -t $TMUXSESSION
    if [ $? -eq 0 ] 
    then
        echo "Tmux session $TMUXSESSION already exists. Attaching."
        tmux -2 attach -t $TMUXSESSION
    else
        tmux -2 new -s $TMUXSESSION
    fi
}

# Convenient killing of unneeded tmux session provided by:
# tk <session-name>
tk () {
    if [ -z "$1" ]
    then
        echo 'Error: Please specify a valid tmux-session name to kill'
    else
        TMUXSESSION=$1
        # if the session is already running, just attach to it.
        tmux has-session -t $TMUXSESSION
        if [ $? -eq 0 ] 
        then
            echo "Killing tmux session $TMUXSESSION"
            tmux kill-session -t $TMUXSESSION
        else
            echo "Tmux session $TMUXSESSION does not exist. Nothing to kill"
        fi
    fi
}


# Git aliases - - - - - - - - - - - - - - -
alias gs='git status -sb'

# Alias tmux for 256 color support
alias tmux='tmux -2'

#archlinux only aliases
alias ys='sudo yaourt -S'
