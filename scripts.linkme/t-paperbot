#!/bin/sh

SESSION='paperbot'

if [ -z "$1" ]
then
    WORKINGDIR="~/code/pagezero"
else
    WORKINGDIR=$1
fi

if [ -z "$2" ]
then
    PYENVIRONMENT="paperbot"
else
    PYENVIRONMENT=$2
fi

# if the session is already running, just attach to it.
tmux has-session -t $SESSION
if [ $? -eq 0 ]; then
    echo "Session $SESSION already exists. Attaching."
    tmux -2 attach -t $SESSION
    exit 0;
fi

tmux start-server
tmux new-session -d -s $SESSION -n shell
tmux new-window -t $SESSION:1 -n vim
tmux new-window -t $SESSION:2 -n repl
tmux new-window -t $SESSION:3 -n uwsgi
tmux new-window -t $SESSION:4 -n mongod
tmux new-window -t $SESSION:5 -n mongo
tmux new-window -t $SESSION:6 -n scrape
tmux new-window -t $SESSION:7 -n aggregate

tmux send-keys -t $SESSION:0 "cd $WORKINGDIR; workon $PYENVIRONMENT; clear" C-m
tmux send-keys -t $SESSION:1 "cd $WORKINGDIR; workon $PYENVIRONMENT; clear; vs" C-m
tmux send-keys -t $SESSION:2 "cd $WORKINGDIR; workon $PYENVIRONMENT; clear; ipython" C-m
tmux send-keys -t $SESSION:3 "cd $WORKINGDIR; workon $PYENVIRONMENT; clear; uwsgi -H backend/paperbot_env -s :3031 2>&1 | bin/make-debug-page" C-m
tmux send-keys -t $SESSION:4 "cd $WORKINGDIR; workon $PYENVIRONMENT; clear; mongod --repair; mongod" C-m
tmux send-keys -t $SESSION:5 "cd $WORKINGDIR; workon $PYENVIRONMENT; sleep 4; clear; mongo" C-m
tmux send-keys -t $SESSION:6 "cd $WORKINGDIR; workon $PYENVIRONMENT; sleep 4; clear; scraperd" C-m
tmux send-keys -t $SESSION:7 "cd $WORKINGDIR; workon $PYENVIRONMENT; sleep 4; clear; aggregationd" C-m

tmux select-window -t $SESSION:0
tmux -2 attach-session -d -t $SESSION


